#ifndef OLED_H_
#define OLED_H_

#include <Wire.h>

//*********************OLED相关************************
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>


//**************OLED*******************
#define OLED_RESET     4
Adafruit_SSD1306 display(128, 64, &Wire, OLED_RESET);
byte oledmode=1;

//取128*64 逐行式 顺向高位在前
static const unsigned char PROGMEM pic1[] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xC0,0x00,
0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xC0,0x00,
0x0F,0xF0,0x00,0x00,0x01,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xE0,0x00,
0x1F,0xF8,0x00,0x00,0x03,0xFF,0xFF,0x80,0x00,0x00,0x3C,0x00,0x00,0x0F,0xFF,0xF0,
0x1F,0xFE,0x00,0x00,0x03,0xFF,0xFF,0xC0,0x00,0x00,0x3E,0x00,0x00,0x0F,0xFF,0xF8,
0x3F,0xFF,0x00,0x00,0x03,0xFF,0xFF,0xE0,0x00,0x00,0x3E,0x00,0x00,0x3F,0xFF,0xFC,
0x1F,0xFF,0x00,0x00,0x03,0xFF,0xFF,0xF0,0x00,0x00,0x3E,0x00,0x00,0x7F,0xFF,0xFC,
0x1F,0xFF,0x8F,0xC0,0x03,0xFF,0xFF,0xF0,0x00,0x00,0x3F,0x00,0x00,0x7F,0xFF,0xFC,
0x0F,0xFF,0x9F,0xF8,0x03,0xFE,0x00,0xF8,0x00,0x00,0x3F,0x00,0x00,0x7F,0xFF,0xFC,
0x00,0x3F,0xBF,0xFE,0x01,0xF8,0x00,0x38,0x00,0x00,0x1F,0x00,0x00,0x7F,0xFF,0xF8,
0x1C,0x03,0xBF,0xFF,0x01,0xF8,0x01,0x0C,0x00,0x00,0x1F,0x00,0x00,0x7F,0xFE,0x00,
0x3E,0x01,0xBF,0xFF,0x01,0xFA,0x03,0xCC,0x00,0x60,0x1F,0x03,0x80,0x3F,0xC0,0x00,
0x3E,0x01,0xBF,0xFF,0x81,0xFF,0x8F,0xCC,0x00,0xF8,0x1F,0x0F,0xC0,0x0F,0xC2,0x00,
0x3E,0x01,0x3F,0xFF,0x81,0xFF,0xDF,0xEC,0x01,0xFC,0x1F,0x0F,0xE0,0x07,0xC7,0x00,
0x3E,0x02,0x1F,0xFF,0x01,0xFB,0xFF,0xC8,0x03,0xFC,0x1F,0x1F,0xE0,0x07,0xC7,0x00,
0x3E,0x02,0x00,0x3F,0x01,0xF1,0xFF,0xC8,0x03,0xFE,0x1F,0x1F,0xE0,0x03,0xCF,0x78,
0x3E,0x04,0x60,0x0E,0x01,0xF0,0xFF,0x88,0x03,0xFE,0x1F,0x1F,0xE0,0x01,0xFF,0xC0,
0x1F,0x00,0xFC,0x0E,0x03,0xF1,0xFF,0x08,0x01,0xFE,0x1E,0x1F,0xE0,0x00,0x7F,0x00,
0x1F,0xC0,0x7F,0x98,0x03,0xF3,0xFF,0x08,0x01,0xFE,0x1E,0x1F,0xE0,0x00,0x0F,0xF0,
0x07,0xFE,0x3F,0xF0,0x03,0xE7,0xFF,0x08,0x00,0xFE,0x1E,0x1F,0xC0,0x07,0xFF,0xF8,
0x00,0x03,0x1F,0xFC,0x03,0xE7,0xFB,0x88,0x00,0x7C,0x1C,0x0F,0x80,0x07,0xFF,0xF8,
0x01,0xF2,0x07,0xFE,0x03,0xE7,0xE0,0xCC,0x00,0x38,0x1C,0x00,0x00,0x0F,0xFF,0xF8,
0x0F,0xF2,0x03,0xFE,0x03,0xE3,0xC0,0x07,0x80,0x00,0x1C,0x00,0x00,0x0F,0xFF,0xF0,
0x1F,0xE6,0x06,0x3C,0x03,0xC0,0x00,0x00,0x80,0x00,0x18,0x00,0x00,0x07,0xFF,0x00,
0x1F,0x8C,0x00,0x00,0x03,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x06,0x00,
0x0E,0x00,0x00,0x00,0x03,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x01,0x80,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x00,0x00,0x00,
0x01,0x80,0x3F,0x80,0x06,0x00,0x0E,0x0C,0x20,0x30,0x00,0x84,0x00,0x60,0x00,0xC0,
0x1F,0xE0,0x3F,0x81,0x0C,0x06,0x36,0x3E,0x60,0x3F,0xE1,0xCF,0x00,0x60,0x0F,0xF0,
0x0F,0xE0,0x1C,0x03,0x9F,0x86,0x7E,0x3E,0xF0,0x17,0xE3,0xFD,0x80,0x62,0x03,0x00,
0x00,0xD0,0x3F,0x03,0x7D,0x8F,0xFF,0x1D,0xD8,0x7F,0x63,0xFF,0x84,0x66,0x06,0x80,
0x1F,0xF0,0x3F,0x03,0xFF,0x8F,0xFF,0x3F,0x88,0x7F,0xC1,0xFF,0x04,0x67,0x0F,0xF0,
0x07,0xE0,0x3F,0x03,0x7F,0x8F,0xD4,0x3D,0xF0,0x60,0x01,0xBE,0x04,0x63,0x1D,0x80,
0x06,0x60,0x16,0x01,0xF1,0x86,0xFC,0x3E,0xF0,0x7F,0x81,0xFF,0x80,0x62,0x1F,0xF8,
0x07,0xC0,0x36,0x67,0x61,0x8F,0x9C,0x3E,0xE0,0x1B,0x81,0xBE,0x00,0x60,0x1F,0xF8,
0x03,0xC0,0x77,0xE0,0x61,0x85,0x1C,0x0C,0xFC,0x1F,0x81,0xBF,0xC0,0x60,0x01,0x80,
0x07,0xE0,0x67,0xE0,0x60,0x80,0x1C,0x0C,0x3C,0x0F,0x81,0xF6,0x00,0x60,0x01,0x80,
0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

void orb(int x,int y,int a,int r,int cr){//中心坐标x,y,起始角度a,环绕半径r圆形图案半径
  int x1=cos((a-90)*PI/180)*r;
  int y1=sin((a-90)*PI/180)*r;
  display.drawCircle(x1+x,y1+y,cr,SSD1306_WHITE);
}
void orb1(int x,int y,int a,int r,int cr){//中心坐标x,y,起始角度a,环绕半径r圆形图案半径
  int x1=cos((a-90)*PI/180)*r;
  int y1=sin((a-90)*PI/180)*r;
  display.fillCircle(x1+x,y1+y,cr,SSD1306_WHITE);
}

void oleddisplay(){
  if(oledmode==0){ 
    display.drawBitmap(0, 8, pic1, 128, 47, 1); //画出字符对应点阵数据
    display.display();//开显示  
    display.clearDisplay();//清屏  
  } else if (oledmode==1){
    display.clearDisplay();            //Clear the display 
//    if(!mode)
//    {
//      display.setCursor(2,0);
//      display.print("Mode: ");      
//      display.print("Debug"); 
//      display.invertDisplay(true);    //黑白翻转
//      display.setCursor(2,15);
//      display.print("PT1:");             
//      display.print(data.pot1);     
//      display.print("      PT2:");  
//      display.print(0);  //display.print(data.pot2); 
//    
//      if(!digitalRead(t1)){
//          display.setCursor(2,28);
//          display.print("ROLL:");             
//          display.print(data.roll);     
//          display.print("   PITCH:");  
//          display.print(data.pitch);       
//        } else {
//          display.setCursor(2,28);
//          display.print("SW1: ");             
//          display.print(digitalRead(t1));     
//          display.print("       SW2: ");  
//          display.print(digitalRead(t2)); 
//        }   
//      // 
//      display.setCursor(2,42);            //Select where to print 124 x 64
//      display.print("LY: ");             
//      display.print(LY_to_send);     
//      display.print("      RY: ");  
//      display.print(RY_to_send);    
//      display.setCursor(2,55);
//      display.print("LX: ");             
//      display.print(LX_to_send);     
//      display.print("      RX: ");  
//      display.print(RX_to_send);    
//      display.display();      
//    }
    if(mode)
    {    

      display.invertDisplay(false);    //黑白翻转
      
      for (int i=0;i<30;i++){           //外环
         orb(24,32,angle+i*12,24,0);
         orb(104,32,angle+i*12,24,0);
      }
      for (int i=0;i<map(data.pot1,0,255,1,10);i++){  //左电位器
         orb(24,32,i*6,31,random(2));
         orb(24,32,360-i*6,31,random(2));
      }
      for (int i=0;i<map(data.pot2,0,255,1,10);i++){  //右电位器     
         orb(104,32,i*6,31,random(2));
         orb(104,32,360-i*6,31,random(2));
      }
      
      if (data.tSwitch1 == 1){     //三颗行星
        orb(24,32,angle+235,24,2);
      } else {
        orb1(24,32,angle+235,24,3);
      }
      if (data.tSwitch2 == 1){     
        orb(104,32,angle+145,24,2);
      } else {
        orb1(104,32,angle+145,24,3);
      }
      orb(24,32,angle,15,random(2));
      orb(104,32,angle+30,15,0);
      orb(24,32,angle+100,18,0);
      orb(104,32,angle+230,19,random(2));
  
      if (data.j1Button == 1){
        display.drawCircle( map(data.j1PotX,255,0,39,9), map(data.j1PotY,255,0,47,17), 6, SSD1306_WHITE);
        display.drawCircle( map(data.j1PotX,255,0,39,9), map(data.j1PotY,255,0,47,17), 4, SSD1306_WHITE);
      } else {
        display.fillCircle( map(data.j1PotX,255,0,39,9), map(data.j1PotY,255,0,47,17), 6, SSD1306_WHITE);
      }
      if (data.j2Button == 1){
        display.drawCircle( map(data.j2PotX,255,0,119,89), map(data.j2PotY,255,0,47,17), 6, SSD1306_WHITE);
        display.drawCircle( map(data.j2PotX,255,0,119,89), map(data.j2PotY,255,0,47,17), 4, SSD1306_WHITE);
      } else {
        display.fillCircle( map(data.j2PotX,255,0,119,89), map(data.j2PotY,255,0,47,17), 6, SSD1306_WHITE);
      }
  
      if (data.tSwitch1 == 1){
        display.fillCircle(64, 32, random(2), SSD1306_WHITE);
      } else {
         for (int i=0;i<20;i++){           //中心外环
           orb(64,32,angle+i*18,14,0);
           display.fillCircle(map(data.roll,0,255,76,52), map(data.pitch,0,255,44,20), 2, SSD1306_WHITE);
        }
      }  
  
      if (data.buttonR2 == 1){
        display.drawCircle(42, 56, random(2), SSD1306_WHITE);
      } else {
        display.fillCircle(42, 56, 2, SSD1306_WHITE);
      }
      if (data.buttonR1 == 1){
        display.drawCircle(7, 61, random(2), SSD1306_WHITE);
      } else {
        display.fillCircle(7, 61, 2, SSD1306_WHITE);
      }
      if (data.buttonR4 == 1){
        display.drawCircle(124, 59, random(2), SSD1306_WHITE);
      } else {
        display.fillCircle(124, 59, 2, SSD1306_WHITE);
      }
      if (data.buttonR3 == 1){
        display.drawCircle(90, 57, random(2), SSD1306_WHITE);
      } else {
        display.fillCircle(90, 57, 2, SSD1306_WHITE);
      }        
    }
          
    display.display();  
    angle++;
    if (angle>359) angle=0;
    }
  }



#endif  
